<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gioov.spiny.user.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.gioov.spiny.user.entity.UserEntity">
        <id column="id" property="id" jdbcType="BIGINT"/> <!-- id -->
        <result column="password" property="password" jdbcType="VARCHAR"/> <!-- 用户密码 -->
        <result column="username" property="username" jdbcType="VARCHAR"/> <!-- 用户名 -->
        <result column="email" property="email" jdbcType="VARCHAR"/> <!-- 电子邮箱 -->
        <result column="email_is_verified" property="emailIsVerified" jdbcType="INTEGER"/> <!-- 电子邮箱是否已验证 -->
        <result column="department_id" property="departmentId" jdbcType="BIGINT"/> <!-- 部门 id -->
        <result column="remark" property="remark" jdbcType="VARCHAR"/> <!-- 备注 -->
        <result column="gmt_deleted" property="gmtDeleted" jdbcType="TIMESTAMP"/> <!-- 删除时间 -->
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP"/> <!-- 更新时间 -->
        <result column="gmt_created" property="gmtCreated" jdbcType="TIMESTAMP"/> <!-- 创建时间 -->
    </resultMap>

    <sql id="TableName">
        `user`
    </sql>

    <sql id="BaseColumnList">
        `id`, `password`, `username`, `email`, `email_is_verified`, `department_id`, `remark`, `gmt_deleted`, `gmt_modified`, `gmt_created`
    </sql>

    <insert id="insertOne" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.gioov.spiny.user.entity.UserEntity">
        INSERT INTO
        <include refid="TableName"/>
        (`id`, `password`, `username`, `email`, `email_is_verified`, `remark`, `gmt_deleted`, `gmt_modified`,
        `gmt_created`)
        VALUES (#{id}, #{password}, #{username}, #{email}, #{emailIsVerified}, #{remark},
        #{gmtDeleted}, #{gmtModified}, #{gmtCreated})
    </insert>

    <update id="updateOne" keyProperty="id" parameterType="com.gioov.spiny.user.entity.UserEntity">
        UPDATE
        <include refid="TableName"/>
        SET `username` = #{username}, `email` = #{email},`email_is_verified` =
        #{emailIsVerified}, `remark`
        = #{remark}, `gmt_modified` = #{gmtModified}
        WHERE `id`= #{id}
    </update>

    <delete id="deleteOne" parameterType="long">
        DELETE FROM
        <include refid="TableName"/>
        WHERE `id` = #{id}
    </delete>

    <select id="getOne" resultMap="BaseResultMap">
        SELECT
        <include refid="BaseColumnList"/>
        FROM
        <include refid="TableName"/>
        WHERE `id` = #{id} LIMIT 1
    </select>

    <select id="listAll" resultMap="BaseResultMap">
        SELECT
        <include refid="BaseColumnList"/>
        FROM
        <include refid="TableName"/>
    </select>

    <select id="pageAll" resultMap="BaseResultMap" parameterType="com.gioov.common.mybatis.Pageable">
        SELECT
        <include refid="BaseColumnList"/>
        FROM
        <include refid="TableName"/>
        ${pageable}
    </select>
    <select id="countAll" resultType="int">
        SELECT COUNT(1) FROM
        <include refid="TableName"/>
    </select>

    <select id="getOneByUsername" resultMap="BaseResultMap" parameterType="string">
        SELECT
        <include refid="BaseColumnList"/>
        FROM
        <include refid="TableName"/>
        WHERE username = #{username} LIMIT 1
    </select>

    <delete id="deleteAll">
        DELETE FROM
        <include refid="TableName"/>
        WHERE `id` IN
        (
        <foreach collection="list" item="item" index="index" separator=",">
            #{item}
        </foreach>
        )
    </delete>

    <update id="signGmtDeleted">
        UPDATE
        <include refid="TableName"/>
        SET `gmt_deleted` = #{gmtDeleted}
        WHERE `id` IN
        (
        <foreach collection="idList" item="item" index="index" separator=",">
            #{item}
        </foreach>
        )
    </update>

    <update id="unsignGmtDeleted">
        UPDATE
        <include refid="TableName"/>
        SET `gmt_deleted` = NULL
        WHERE `id` IN
        (
        <foreach collection="idList" item="item" index="index" separator=",">
            #{item}
        </foreach>
        )
    </update>

</mapper>
