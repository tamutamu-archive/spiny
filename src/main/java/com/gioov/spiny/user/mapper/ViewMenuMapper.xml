<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gioov.spiny.user.mapper.ViewMenuMapper">
    <resultMap id="BaseResultMap" type="com.gioov.spiny.user.entity.ViewMenuEntity">
        <id column="id" property="id" jdbcType="BIGINT"/> <!-- id -->
        <result column="name" property="name" jdbcType="VARCHAR"/> <!-- 菜单名称 -->
        <result column="icon" property="icon" jdbcType="VARCHAR"/> <!-- 图标（icon） -->
        <result column="url" property="url" jdbcType="LONGVARCHAR"/> <!--请求地址（url）-->
        <result column="menu_category_id" property="menuCategoryId" jdbcType="BIGINT"/> <!-- 菜单分类 id -->
        <result column="role_id" property="roleId" jdbcType="BIGINT"/> <!-- 角色 id -->
        <result column="sort" property="sort" jdbcType="BIGINT"/> <!-- 排序 -->
        <result column="remark" property="remark" jdbcType="VARCHAR"/> <!-- 备注 -->
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP"/> <!-- 更新时间 -->
        <result column="gmt_created" property="gmtCreated" jdbcType="TIMESTAMP"/> <!-- 创建时间 -->
    </resultMap>

    <sql id="TableName">
        `view_menu`
    </sql>

    <sql id="BaseColumnList">
        `id`, `name`, `icon`, `url`, `menu_category_id`, `role_id`, `sort`, `remark`, `gmt_modified`, `gmt_created`
    </sql>

    <insert id="insertOne" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.gioov.spiny.user.entity.ViewMenuEntity">
        INSERT INTO
        <include refid="TableName"/>
        (`id`, `name`, `icon`, `url`, `menu_category_id`, `role_id`, `sort`, `remark`, `gmt_modified`, `gmt_created`)
        VALUES (#{id}, #{name}, #{icon}, #{url}, #{menuCategoryId}, #{roleId}, #{sort}, #{remark},
        #{gmtModified}, #{gmtCreated})
    </insert>

    <update id="updateOne" keyProperty="id" parameterType="com.gioov.spiny.user.entity.ViewMenuEntity">
        UPDATE
        <include refid="TableName"/>
        SET `name` = #{name}, `icon` = #{icon}, `url` = #{url}, `sort` = #{sort}, `remark` =
        #{remark}, `gmt_modified` = #{gmtModified}
        WHERE `id`= #{id}
    </update>

    <delete id="deleteOne" parameterType="long">
        DELETE FROM
        <include refid="TableName"/>
        WHERE `id` = #{id}
    </delete>

    <delete id="deleteAll">
        DELETE FROM
        <include refid="TableName"/>
        WHERE `id` IN
        (
        <foreach collection="list" item="item" index="index" separator=",">
            #{item}
        </foreach>
        )
    </delete>

    <select id="getOne" resultMap="BaseResultMap">
        SELECT
        <include refid="BaseColumnList"/>
        FROM
        <include refid="TableName"/>
        WHERE `id` = #{id} LIMIT 1
    </select>

    <select id="pageAll" resultMap="BaseResultMap" parameterType="com.gioov.common.mybatis.Pageable">
        SELECT
        <include refid="BaseColumnList"/>
        FROM
        <include refid="TableName"/>
        ${pageable}
    </select>

    <select id="listAllByMenuCategoryIdAndRoleId" resultMap="BaseResultMap">
        SELECT
        <include refid="BaseColumnList"/>
        FROM
        <include refid="TableName"/>
        WHERE `menu_category_id` = #{menuCategoryId} AND `role_id` = #{roleId}
    </select>

    <select id="pageAllByMenuCategoryIdAndRoleId" resultMap="BaseResultMap">
        SELECT
        <include refid="BaseColumnList"/>
        FROM
        <include refid="TableName"/>
        WHERE `menu_category_id` = #{menuCategoryId} AND `role_id` = #{roleId} ${pageable}
    </select>
    <select id="countAllByMenuCategoryIdAndRoleId" resultType="int">
        SELECT COUNT(1) FROM
        <include refid="TableName"/>
        WHERE `menu_category_id` = #{menuCategoryId} AND `role_id` = #{roleId}
    </select>

    <select id="getOneByMenuCategoryIdAndRoleId" resultMap="BaseResultMap">
        SELECT
        <include refid="BaseColumnList"/>
        FROM
        <include refid="TableName"/>
        WHERE `menu_category_id` = #{menuCategoryId} AND `role_id` = #{roleId} LIMIT 1
    </select>

    <select id="searchAllByName" resultMap="BaseResultMap">
        SELECT
        <include refid="BaseColumnList"/>
        FROM
        <include refid="TableName"/>
        WHERE `name` LIKE '%${name}%'
    </select>


</mapper>
